{"version":3,"sources":["webpack://Auth/./src/js/modules/auth.js"],"names":["createModalAuth","isRegister","$el","document","createElement","options","title","forwarding","register","innerHTML","node","auth","form","querySelector","handleAuth","e","preventDefault","async","email","password","username","user","createUserWithEmailAndPassword","updateProfile","photoURL","displayName","window","location","reload","signInWithEmailAndPassword","console","error","authEmailAndPassword","value","then","removeEventListener","body","addEventListener","target","closest"],"mappings":"6JAKA,MAAMA,EAAkBC,IACtB,MAAMC,EAAMC,SAASC,cAAc,SAC7BC,EAAUJ,EACZ,CACAK,MAAO,cACPC,WAAY,mBACZC,UAAU,GAEV,CACAF,MAAO,OACPC,WAAY,mBAoBhB,OAjBAL,EAAIO,UAAY,0HAGsBJ,EAAQC,uBACtCD,EAAQG,SAAW,6LAGjB,0fAMkCH,EAAQE,oDAI7C,CACLG,KAAMR,IA0BGS,EAAO,KAClB,IAAIV,EAA8B,eAAjB,WACjB,QAAiBD,EAAgBC,IACjC,IAAIW,EAAOT,SAASU,cAAc,gBAElC,MAAMC,EAAcC,IAClBA,EAAEC,iBA3BuBC,OAAOC,EAAOC,EAAUC,EAAUnB,KAC7D,IACE,GAAIA,EAAY,CACd,MACMoB,SADiB,WAAgBC,+BAA+BJ,EAAOC,IACvDE,KAQtB,aANMA,EAAKE,cAAc,CACvBC,SAAU,kCACVC,YAAaL,GAAY,eAErB,QAAWC,EAAMD,EAAU,kCAAmC,uBACpEM,OAAOC,SAASC,eAGK,WAAgBC,2BAA2BX,EAAOC,IACzE,QAAY,KACZ,MAAOJ,GACPe,QAAQC,MAAMhB,KAediB,CAJc7B,SAASU,cAAc,eAAeoB,MACnC9B,SAASU,cAAc,kBAAkBoB,MAC7C9B,SAASU,cAAc,eAAeoB,OAAS,CAACA,MAAO,IAExBhC,GACzCiC,MAAK,KACJtB,EAAKuB,oBAAoB,SAAUrB,IACnC,QAAW,oBAMjBX,SAASiC,KAAKC,iBAAiB,SAAStB,IAClCA,EAAEuB,OAAOC,QAAQ,sBACnBxB,EAAEC,iBACFJ,EAAKuB,oBAAoB,SAAUrB,IACnC,QAAW,gBACXb,GAAcA,GACd,QAAYA,EAAa,YAAc,WACvC,QAAiBD,EAAgBC,IACjCW,EAAOT,SAASU,cAAc,gBAC9BD,EAAKyB,iBAAiB,SAAUvB,OAIpCF,EAAKyB,iBAAiB,SAAUvB","file":"bundle.3a4b6e86f34959d33416.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport {getUrlHash, removeNode, renderInDocument, setLocation} from './utils'\r\nimport {updateUser} from './userSettings';\r\n\r\nconst createModalAuth = isRegister => {\r\n  const $el = document.createElement('aside')\r\n  const options = isRegister\r\n    ? {\r\n      title: 'Регистрация',\r\n      forwarding: 'Уже есть аккаун?',\r\n      register: true\r\n    }\r\n    : {\r\n      title: 'Вход',\r\n      forwarding: 'Создать аккаунт'\r\n    }\r\n\r\n  $el.innerHTML = `\r\n    <aside class=\"text-center form-signin\">\r\n      <form class=\"sin-in-form\">\r\n        <h3 class=\"h3 mb-3 fw-normal\">${options.title}</h3>\r\n        ${options.register ? `\r\n          <label for=\"inputName\" class=\"invisible sr-only\">Имя</label>\r\n          <input type=\"text\" id=\"inputName\" class=\"form-control\" placeholder=\"Имя\" required autofocus>\r\n        ` : ''}\r\n        <label for=\"inputEmail\" class=\"invisible sr-only\">Email</label>\r\n        <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email\" required autofocus>\r\n        <label for=\"inputPassword\" class=\"invisible sr-only\">Password</label>\r\n        <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\r\n        <button class=\"w-100 btn btn-lg btn-primary btn-auth\" type=\"submit\">Войти</button>\r\n        <a href=\"#\" class=\"forwarding-link\">${options.forwarding}</a>\r\n      </form>\r\n    </aside>\r\n    `\r\n  return {\r\n    node: $el\r\n  }\r\n}\r\n\r\n\r\nconst authEmailAndPassword = async (email, password, username, isRegister) => {\r\n  try {\r\n    if (isRegister) {\r\n      const userData = await firebase.auth().createUserWithEmailAndPassword(email, password)\r\n      const user = userData.user\r\n\r\n      await user.updateProfile({\r\n        photoURL: `https://via.placeholder.com/150`,\r\n        displayName: username || 'user'\r\n      })\r\n      await updateUser(user, username, `https://via.placeholder.com/150`, 'Нет информации')\r\n      window.location.reload()\r\n      return\r\n    }\r\n    const userData = await firebase.auth().signInWithEmailAndPassword(email, password)\r\n    setLocation('/')\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nexport const auth = () => {\r\n  let isRegister = getUrlHash() === '#register'\r\n  renderInDocument(createModalAuth(isRegister))\r\n  let form = document.querySelector('.sin-in-form')\r\n\r\n  const handleAuth = (e) => {\r\n    e.preventDefault()\r\n    const email = document.querySelector('#inputEmail').value\r\n    const password = document.querySelector('#inputPassword').value\r\n    const name = document.querySelector('#inputName')?.value || {value: ''}\r\n\r\n    authEmailAndPassword(email, password, name, isRegister)\r\n      .then(() => {\r\n        form.removeEventListener('submit', handleAuth)\r\n        removeNode('.form-signin')\r\n      })\r\n\r\n  }\r\n\r\n\r\n  document.body.addEventListener('click', e => {\r\n    if (e.target.closest('.forwarding-link')) {\r\n      e.preventDefault()\r\n      form.removeEventListener('submit', handleAuth)\r\n      removeNode('.form-signin')\r\n      isRegister = !isRegister\r\n      setLocation(isRegister ? '#register' : '#login')\r\n      renderInDocument(createModalAuth(isRegister))\r\n      form = document.querySelector('.sin-in-form')\r\n      form.addEventListener('submit', handleAuth)\r\n    }\r\n  })\r\n\r\n  form.addEventListener('submit', handleAuth)\r\n\r\n}\r\n"],"sourceRoot":""}